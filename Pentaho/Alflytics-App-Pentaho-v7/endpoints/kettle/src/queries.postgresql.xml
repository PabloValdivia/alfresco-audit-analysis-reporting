<queries>
<query queryId="alfrescoAuditsInStaging">INSERT INTO "STG_ALF_AUDITS" ("INSTANCE_ID","ID","APPLICATION","ENTRY","FILE_NAME") VALUES (?,?,?,?,?);</query>
<query queryId="alfrescoIds">
SELECT
 "ID" AS "instanceId"
FROM
 "DWH_ALF_DIM_INSTANCES"
WHERE
 "IS_ACTIVE"='Y';</query>
<query queryId="alfrescoServer">
SELECT
 "DESCRIPTION", "LOGIN", "PASSWORD", CONCAT("PROTOCOL",'://',"HOST",':',"PORT") AS "BASE_URL", "USER_LIMIT", "AUDIT_LIMIT", "NODE_LIMIT", "WORKFLOW_LIMIT" 
FROM
 "DWH_ALF_DIM_INSTANCES" 
WHERE
 "ID"=${instanceId};</query>
<query queryId="alfrescoAuditApps">
 SELECT 
  A."ID" AS "APP_ID", 
  A."NAME" AS "APP_NAME", 
  A."URL_SUFFIX" AS "APP_URL_SUFFIX", 
  A."QUERY_MAX_ID" AS "APP_QUERY_MAX_ID", 
  A."OPE_TABLE_NAME" AS "APP_OPE_TABLE_NAME", 
  A."ORDINAL",
  A."INSTANCE_ID", 
  A."IS_ACTIVE" AS "APP_IS_ACTIVE", 
  P."ID", 
  P."NAME", 
  P."TYPE", 
  P."IS_OPE_INDEXED", 
  P."JSON_PATH", 
  P."FIELD_NAME",  
  P."IS_ACTIVE"
 FROM 
   "DWH_ALF_AUDIT_APPS" AS A 
   JOIN "DWH_ALF_AUDIT_PROPERTIES" AS P ON P."APP_ID"=A."ID"
 WHERE
  A."INSTANCE_ID"=${instanceId} AND A."IS_ACTIVE"='Y' 
 ORDER BY
   A."ORDINAL" ASC, P."ID" ASC
</query>
<query queryId="alfrescoCategoriesInStaging">INSERT INTO "STG_ALF_CATEGORIES" ("INSTANCE_ID","ID","IS_MODIFIED","ENTRY","FILE_NAME") VALUES (?,?,?,?,?);</query>
<query queryId="alfrescoClasses">
 SELECT 
  C."ID" AS "CLASS_ID",C."NAME" AS "CLASS_NAME",C."IS_FILE" AS "CLASS_IS_FILE",C."IS_FOLDER" AS "CLASS_IS_FOLDER",C."IS_ASPECT" AS "CLASS_IS_ASPECT",
  C."IS_ROOT" AS "CLASS_IS_ROOT",C."OPE_TABLE_NAME" AS "CLASS_OPE_TABLE_NAME",C."DWH_TABLE_NAME" AS "CLASS_DWH_TABLE_NAME",C."ORDINAL",
  C."INSTANCE_ID",C."IS_ACTIVE" AS "CLASS_IS_ACTIVE",P."ID",P."NAME",P."TYPE",P."IS_MULTIVALUE",P."OPE_TABLE_NAME",P."IS_OPE_INDEXED",P."DWH_TABLE_NAME",
  P."IS_DWH_INDEXED",P."JSON_PATH",P."FIELD_NAME",P."IS_ACTIVE"
  FROM 
   "DWH_ALF_CLASSES" AS C 
   JOIN "DWH_ALF_CLASS_PROPERTIES" AS P ON P."CLASS_ID"=C."ID" WHERE C."INSTANCE_ID"=${instanceId} AND C."IS_ACTIVE"='Y' 
  ORDER BY
   C."ORDINAL" ASC, P."ID" ASC
</query>
<query queryId="alfrescoNodesInStaging">INSERT INTO "STG_ALF_NODES" ("INSTANCE_ID","ID","IS_MODIFIED","ENTRY","FILE_NAME") VALUES (?,?,?,?,?);</query>
<query queryId="alfrescoUsersInStaging">INSERT INTO "STG_ALF_USERS" ("INSTANCE_ID","ID","IS_MODIFIED","ENTRY","FILE_NAME") VALUES (?,?,?,?,?);</query>
<query queryId="alfrescoWfDeploymentIns">INSERT INTO "STG_ALF_WF_DEPLOYMENTS" ("INSTANCE_ID","ID","IS_MODIFIED","ENTRY","FILE_NAME") VALUES (?,?,?,?,?);</query>
<query queryId="alfrescoWfDefinitionIns">INSERT INTO "STG_ALF_WF_DEFINITIONS" ("INSTANCE_ID","ID","IS_MODIFIED","ENTRY","FILE_NAME") VALUES (?,?,?,?,?);</query>
<query queryId="alfrescoWfInstanceIns">INSERT INTO "STG_ALF_WF_INSTANCES" ("INSTANCE_ID","ID","IS_MODIFIED","ENTRY","FILE_NAME") VALUES (?,?,?,?,?);</query>
<query queryId="alfrescoWfItemIns">INSERT INTO "STG_ALF_WF_ITEMS" ("INSTANCE_ID","ID","IS_MODIFIED","ENTRY","FILE_NAME") VALUES (?,?,?,?,?);</query>
<query queryId="alfrescoWfTaskIns">INSERT INTO "STG_ALF_WF_TASKS" ("INSTANCE_ID","ID","IS_MODIFIED","ENTRY","FILE_NAME") VALUES (?,?,?,?,?);</query>
<query queryId="dataQualityLog">INSERT INTO "DWH_DATA_QUALITY" ("SOURCE_TYPE","SOURCE_ID","BATCH_ID","ENTITIES","LAYER","VALUE") VALUES ('${sourceType}',${sourceId},'${batchId}','${entities}','${layer}',${counter})</query>
<query queryId="dataQualityLog2">INSERT INTO "DWH_DATA_QUALITY_LOGS" ("SOURCE_TYPE","SOURCE_ID","BATCH_ID","DESCRIPTION","BATCH_START","BATCH_END","SUCCESS") VALUES (?,?,?,?,?,?,?);</query>
<query queryId="dateYearIns">
INSERT INTO "DWH_DIM_DATES_YEARS" ("ID","DESCRIPTION") 
(
  SELECT ? AS "ID", ? AS "DESCRIPTION"
)
ON CONFLICT ("ID") DO UPDATE SET 
 "DESCRIPTION"=EXCLUDED."DESCRIPTION";
</query>
<query queryId="dateMonthIns">
INSERT INTO "DWH_DIM_DATES_MONTHS" ("ID","DESCRIPTION","MONTH_DESCRIPTION","YEAR_ID")
(
  SELECT ? AS "ID", ? AS "DESCRIPTION", ? AS "MONTH_DESCRIPTION", ? AS "YEAR_ID"
)
ON CONFLICT ("ID") DO UPDATE SET 
 "DESCRIPTION"=EXCLUDED."DESCRIPTION", "MONTH_DESCRIPTION"=EXCLUDED."MONTH_DESCRIPTION", "YEAR_ID"=EXCLUDED."YEAR_ID";
</query>
<query queryId="dateDayIns">
INSERT INTO "DWH_DIM_DATES" ("ID","DESCRIPTION","DATE_DESCRIPTION","MONTH_ID")
(
  SELECT ? AS "ID", ? AS "DESCRIPTION", ? AS "DATE_DESCRIPTION", ? AS "MONTH_ID"
)
ON CONFLICT ("ID") DO UPDATE SET 
 "DESCRIPTION"=EXCLUDED."DESCRIPTION", "DATE_DESCRIPTION"=EXCLUDED."DATE_DESCRIPTION", "MONTH_ID"=EXCLUDED."MONTH_ID";
</query>
<query queryId="stagingAuditsTruncateAccess">DELETE FROM "STG_ALF_AUDITS" WHERE "INSTANCE_ID"=${instanceId}</query>
<query queryId="stagingAuditsCount">SELECT COUNT(*) AS "COUNTER" FROM "STG_ALF_AUDITS" WHERE "INSTANCE_ID"=${sourceId}</query>
<query queryId="stagingProcessesCount">SELECT COUNT(*) AS "COUNTER" FROM "STG_ALF_WF_INSTANCES" WHERE "INSTANCE_ID"=${sourceId}</query>
<query queryId="stagingProcessesTruncateDeployments">DELETE FROM "STG_ALF_WF_DEPLOYMENTS" WHERE "INSTANCE_ID"=${instanceId}</query>
<query queryId="stagingProcessesTruncateDefinitions">DELETE FROM "STG_ALF_WF_DEFINITIONS" WHERE "INSTANCE_ID"=${instanceId}</query>
<query queryId="stagingProcessesTruncateInstances">DELETE FROM "STG_ALF_WF_INSTANCES" WHERE "INSTANCE_ID"=${instanceId}</query>
<query queryId="stagingProcessesTruncateItems">DELETE FROM "STG_ALF_WF_ITEMS" WHERE "INSTANCE_ID"=${instanceId}</query>
<query queryId="stagingProcessesTruncateTasks">DELETE FROM "STG_ALF_WF_TASKS" WHERE "INSTANCE_ID"=${instanceId}</query>
<query queryId="stagingRepositoryTruncateCategories">DELETE FROM "STG_ALF_CATEGORIES" WHERE "INSTANCE_ID"=${instanceId}</query>
<query queryId="stagingRepositoryTruncateNodes">DELETE FROM "STG_ALF_NODES" WHERE "INSTANCE_ID"=${instanceId}</query>
<query queryId="stagingTasksCount">SELECT COUNT(*) AS "COUNTER" FROM "STG_ALF_WF_TASKS" WHERE "INSTANCE_ID"=${sourceId}</query>
<query queryId="stagingUsersTruncate">DELETE FROM "STG_ALF_USERS" WHERE "INSTANCE_ID"=${instanceId}</query>
<query queryId="stagingCategoriesCount">SELECT COUNT(*) AS "COUNTER" FROM "STG_ALF_CATEGORIES" WHERE "INSTANCE_ID"=${sourceId}</query>
<query queryId="stagingNodesCount">SELECT COUNT(*) AS "COUNTER" FROM "STG_ALF_NODES" WHERE "INSTANCE_ID"=${sourceId}</query>
<query queryId="stagingUsersCount">SELECT COUNT(*) AS "COUNTER" FROM "STG_ALF_USERS" WHERE "INSTANCE_ID"=${sourceId}</query>
<query queryId="operationalAuditsCount">
 SELECT SUM(T."COUNTER") AS "COUNTER"
 FROM (
  SELECT COUNT(*) AS "COUNTER" FROM "OPE_ALF_AUDIT_ACCESSES" WHERE "INSTANCE_ID"=${sourceId}
 ) T
</query>
<query queryId="operationalAuditsEvents">SELECT "INSTANCE_ID", "APPLICATION", "ENTRY" FROM "STG_ALF_AUDITS" WHERE "INSTANCE_ID"=${instanceId}</query>
<query queryId="operationalCategoriesCount">SELECT COUNT(*) AS "COUNTER" FROM "OPE_ALF_CATEGORIES" WHERE "INSTANCE_ID"=${sourceId}</query>
<query queryId="operationalCategoriesNodes">SELECT "INSTANCE_ID", "IS_MODIFIED", "ENTRY" FROM "STG_ALF_CATEGORIES" WHERE "INSTANCE_ID"=${instanceId}</query>
<query queryId="operationalCategoriesTruncate">DELETE FROM "OPE_ALF_CATEGORIES" WHERE "INSTANCE_ID"=${instanceId}</query>
<query queryId="operationalProcessesCount">SELECT COUNT(*) AS "COUNTER" FROM "OPE_ALF_WF_INSTANCES" WHERE "INSTANCE_ID"=${sourceId}</query>
<query queryId="operationalRepositoryNodes">SELECT "INSTANCE_ID", "IS_MODIFIED", "ENTRY" FROM "STG_ALF_NODES" WHERE "INSTANCE_ID"=${instanceId}</query>
<query queryId="operationalRepositoryCount">
 SELECT SUM(T."COUNTER") AS "COUNTER"
 FROM (
  SELECT COUNT(*) AS "COUNTER" FROM "OPE_ALF_CONTENTS" WHERE "INSTANCE_ID"=${sourceId} 
  UNION ALL 
  SELECT COUNT(*) AS "COUNTER" FROM "OPE_ALF_FOLDERS" WHERE "INSTANCE_ID"=${sourceId}
 ) T
</query>
<query queryId="operationalTasksCount">SELECT COUNT(*) AS "COUNTER" FROM "OPE_ALF_WF_TASKS" WHERE "INSTANCE_ID"=${sourceId}</query>
<query queryId="operationalUsersCount">SELECT COUNT(*) AS "COUNTER" FROM "OPE_ALF_USERS" WHERE "INSTANCE_ID"=${sourceId}</query>
<query queryId="operationalUsersNodes">SELECT "INSTANCE_ID", "IS_MODIFIED", "ENTRY" FROM "STG_ALF_USERS" WHERE "INSTANCE_ID"=${instanceId}</query>
<query queryId="operationalUsersTruncate">DELETE FROM "OPE_ALF_USERS" WHERE "INSTANCE_ID"=${instanceId}</query>
<query queryId="operationalWfDefinitionsTruncate">DELETE FROM "OPE_ALF_WF_DEFINITIONS" WHERE "INSTANCE_ID"=${instanceId}</query>
<query queryId="operationalWfDefinitions">SELECT "INSTANCE_ID", "IS_MODIFIED", "ENTRY" FROM "STG_ALF_WF_DEFINITIONS" WHERE "INSTANCE_ID"=${instanceId}</query>
<query queryId="operationalWfDeploymentsTruncate">DELETE FROM "OPE_ALF_WF_DEPLOYMENTS" WHERE "INSTANCE_ID"=${instanceId}</query>
<query queryId="operationalWfDeployments">SELECT "INSTANCE_ID", "IS_MODIFIED", "ENTRY" FROM "STG_ALF_WF_DEPLOYMENTS" WHERE "INSTANCE_ID"=${instanceId}</query>
<query queryId="operationalWfInstancesTruncate">DELETE FROM "OPE_ALF_WF_INSTANCES" WHERE "INSTANCE_ID"=${instanceId}</query>
<query queryId="operationalWfInstances">SELECT "INSTANCE_ID", "IS_MODIFIED", "ENTRY" FROM "STG_ALF_WF_INSTANCES" WHERE "INSTANCE_ID"=${instanceId}</query>
<query queryId="operationalWfTasksTruncate">DELETE FROM "OPE_ALF_WF_TASKS" WHERE "INSTANCE_ID"=${instanceId}</query>
<query queryId="operationalWfTasks">SELECT "INSTANCE_ID", "IS_MODIFIED", "ENTRY" FROM "STG_ALF_WF_TASKS" WHERE "INSTANCE_ID"=${instanceId}</query>
<query queryId="operationalWfItemsTruncate">DELETE FROM "OPE_ALF_WF_ITEMS" WHERE "INSTANCE_ID"=${instanceId}</query>
<query queryId="operationalWfItems">
 INSERT INTO "OPE_ALF_WF_ITEMS"
 ("INSTANCE_ID", "ID", "WF_INSTANCE_ID")
 SELECT 
  "INSTANCE_ID",
  "ID",
  RPAD(SUBSTR("FILE_NAME", POSITION('.' IN "FILE_NAME") + 1), POSITION('.' IN SUBSTR("FILE_NAME", POSITION('.' IN "FILE_NAME") + 1)) - 1)::int AS "WF_INSTANCE_ID"
 FROM
  "STG_ALF_WF_ITEMS"
 WHERE
  "INSTANCE_ID"=${instanceId}
</query>
<query queryId="timeHourIns">
INSERT INTO "DWH_DIM_TIME_HOURS" ("ID","DESCRIPTION")
(
  SELECT ? AS "ID", ? AS "DESCRIPTION"
) 
ON CONFLICT ("ID") DO UPDATE SET 
 "DESCRIPTION"=EXCLUDED."DESCRIPTION";
</query>
<query queryId="timeMinuteIns">
INSERT INTO "DWH_DIM_TIME_MINUTES" ("ID","DESCRIPTION","HOUR_ID")
(
  SELECT ? AS "ID", ? AS "DESCRIPTION", ? AS "HOUR_ID"
)
ON CONFLICT ("ID") DO UPDATE SET 
 "DESCRIPTION"=EXCLUDED."DESCRIPTION", "HOUR_ID"=EXCLUDED."HOUR_ID";
</query>
<query queryId="warehouseAuditAccessesDelete">
 DELETE FROM "DWH_ALF_FACT_ACCESSES"
 WHERE
  "DWH_ALF_FACT_ACCESSES"."INSTANCE_ID"=${instanceId}
  AND "DWH_ALF_FACT_ACCESSES"."APP_ID"=(SELECT "ID" FROM "DWH_ALF_AUDIT_APPS" WHERE "DWH_ALF_AUDIT_APPS"."INSTANCE_ID"="DWH_ALF_FACT_ACCESSES"."INSTANCE_ID" AND "DWH_ALF_AUDIT_APPS"."NAME"='alfresco-access')
  AND EXISTS (
   SELECT 1 
   FROM "OPE_ALF_AUDIT_ACCESSES"
   WHERE
    "OPE_ALF_AUDIT_ACCESSES"."INSTANCE_ID"="DWH_ALF_FACT_ACCESSES"."INSTANCE_ID" 
    AND "OPE_ALF_AUDIT_ACCESSES"."ID"="DWH_ALF_FACT_ACCESSES"."SRC_ID")
</query>
<query queryId="warehouseAuditAccessesIns">
 INSERT INTO "DWH_ALF_FACT_ACCESSES"
  ("USER_ID","DATE_ID","MINUTE_ID","ACTION_ID","USER_DESCRIPTION","NODE_PATH","INSTANCE_ID","APP_ID","SRC_ID")
 SELECT
  COALESCE(U."ID", -${instanceId}) AS "USER_ID",
  COALESCE(DATE_TRUNC('day',A."TIME"),TO_DATE('2001-01-01','YYYY-MM-DD')) AS "DATE_ID",
  COALESCE(EXTRACT(HOUR FROM A."TIME")*60 + EXTRACT(MINUTE FROM A."TIME"),-1) AS "MINUTE_ID",
  COALESCE(ACT."ID", -${instanceId}) AS "ACTION_ID",
  A."USER" AS "USER_DESCRIPTION",
  COALESCE(A."NODE_PATH",'Unknown') AS "NODE_PATH",
  A."INSTANCE_ID" AS "INSTANCE_ID",
  APPS."ID" AS "APP_ID",
  A."ID" AS "SRC_ID"
 FROM
  "OPE_ALF_AUDIT_ACCESSES" A
  JOIN "DWH_ALF_AUDIT_APPS" APPS ON APPS."INSTANCE_ID" = A."INSTANCE_ID" AND APPS."NAME"='alfresco-access'
  LEFT JOIN "DWH_ALF_DIM_USERS" U ON U."INSTANCE_ID"=A."INSTANCE_ID" AND A."USER"=U."SRC_ID"
  LEFT JOIN "DWH_ALF_DIM_ACTIONS" ACT ON ACT."INSTANCE_ID"=A."INSTANCE_ID" AND UPPER(A."ACTION")=ACT."SRC_ID"
 WHERE
  A."USER" IS NOT NULL
  AND "USER_LOGIN" IS NULL
  AND "USER_LOGIN_FAILURE" IS NULL
  AND "USER_LOGOUT" IS NULL
  AND A."INSTANCE_ID"=${instanceId}
 UNION ALL
 SELECT
  COALESCE(U."ID", -${instanceId}) AS "USER_ID",
  COALESCE(DATE_TRUNC('day',A."TIME"),TO_DATE('2001-01-01','YYYY-MM-DD')) AS "DATE_ID",
  COALESCE(EXTRACT(HOUR FROM A."TIME")*60 + EXTRACT(MINUTE FROM A."TIME"),-1) AS "MINUTE_ID",
  COALESCE(ACT."ID", -${instanceId}) AS "ACTION_ID",
  A."USER_LOGIN" AS "USER_DESCRIPTION",
  COALESCE(A."NODE_PATH",'Unknown') AS "NODE_PATH",
  A."INSTANCE_ID" AS "INSTANCE_ID",
  APPS."ID" AS "APP_ID",
  A."ID" AS "SRC_ID"
 FROM
  "OPE_ALF_AUDIT_ACCESSES" A
  JOIN "DWH_ALF_AUDIT_APPS" APPS ON APPS."INSTANCE_ID" = A."INSTANCE_ID" AND APPS."NAME"='alfresco-access'
  LEFT JOIN "DWH_ALF_DIM_USERS" U ON U."INSTANCE_ID"=A."INSTANCE_ID" AND A."USER_LOGIN"=U."SRC_ID"
  LEFT JOIN "DWH_ALF_DIM_ACTIONS" ACT ON ACT."INSTANCE_ID"=A."INSTANCE_ID" AND ACT."SRC_ID"='LOGIN'
 WHERE
  A."USER" IS NOT NULL
  AND "USER_LOGIN" IS NOT NULL
  AND "USER_LOGIN_FAILURE" IS NULL
  AND "USER_LOGOUT" IS NULL
  AND A."INSTANCE_ID"=${instanceId}
 UNION ALL
 SELECT
  COALESCE(U."ID", -${instanceId}) AS "USER_ID",
  COALESCE(DATE_TRUNC('day',A."TIME"),TO_DATE('2001-01-01','YYYY-MM-DD')) AS "DATE_ID",
  COALESCE(EXTRACT(HOUR FROM A."TIME")*60 + EXTRACT(MINUTE FROM A."TIME"),-1) AS "MINUTE_ID",
  COALESCE(ACT."ID", -${instanceId}) AS "ACTION_ID",
  A."USER_LOGIN_FAILURE" AS "USER_DESCRIPTION",
  COALESCE(A."NODE_PATH",'Unknown') AS "NODE_PATH",
  A."INSTANCE_ID" AS "INSTANCE_ID",
  APPS."ID" AS "APP_ID",
  A."ID" AS "SRC_ID"
 FROM
  "OPE_ALF_AUDIT_ACCESSES" A
  JOIN "DWH_ALF_AUDIT_APPS" APPS ON APPS."INSTANCE_ID" = A."INSTANCE_ID" AND APPS."NAME"='alfresco-access'
  LEFT JOIN "DWH_ALF_DIM_USERS" U ON U."INSTANCE_ID"=A."INSTANCE_ID" AND A."USER_LOGIN_FAILURE"=U."SRC_ID"
  LEFT JOIN "DWH_ALF_DIM_ACTIONS" ACT ON ACT."INSTANCE_ID"=A."INSTANCE_ID" AND ACT."SRC_ID"='LOGINFAILURE'
 WHERE
  A."USER" IS NULL
  AND "USER_LOGIN" IS NULL
  AND "USER_LOGIN_FAILURE" IS NOT NULL
  AND "USER_LOGOUT" IS NULL
  AND A."INSTANCE_ID"=${instanceId}
 UNION ALL
 SELECT
  COALESCE(U."ID", -${instanceId}) AS "USER_ID",
  COALESCE(DATE_TRUNC('day',A."TIME"),TO_DATE('2001-01-01','YYYY-MM-DD')) AS "DATE_ID",
  COALESCE(EXTRACT(HOUR FROM A."TIME")*60 + EXTRACT(MINUTE FROM A."TIME"),-1) AS "MINUTE_ID",
  COALESCE(ACT."ID", -${instanceId}) AS "ACTION_ID",
  A."USER_LOGOUT" AS "USER_DESCRIPTION",
  COALESCE(A."NODE_PATH",'Unknown') AS "NODE_PATH",
  A."INSTANCE_ID" AS "INSTANCE_ID",
  APPS."ID" AS "APP_ID",
  A."ID" AS "SRC_ID"
 FROM
  "OPE_ALF_AUDIT_ACCESSES" A
  JOIN "DWH_ALF_AUDIT_APPS" APPS ON APPS."INSTANCE_ID" = A."INSTANCE_ID" AND APPS."NAME"='alfresco-access'
  LEFT JOIN "DWH_ALF_DIM_USERS" U ON U."INSTANCE_ID"=A."INSTANCE_ID" AND A."USER_LOGOUT"=U."SRC_ID"
  LEFT JOIN "DWH_ALF_DIM_ACTIONS" ACT ON ACT."INSTANCE_ID"=A."INSTANCE_ID" AND ACT."SRC_ID"='LOGOUT'
 WHERE
  A."USER" IS NOT NULL
  AND "USER_LOGIN" IS NULL
  AND "USER_LOGIN_FAILURE" IS NULL
  AND "USER_LOGOUT" IS NOT NULL
  AND A."INSTANCE_ID"=${instanceId};
</query>
<query queryId="warehouseAuditsActionsInsUpd">
INSERT INTO "DWH_ALF_DIM_ACTIONS" ("ID","DESCRIPTION","INSTANCE_ID","SRC_ID")
(
 SELECT
  -${instanceId} AS "ID", 'UNKNOWN' AS "DESCRIPTION", ${instanceId} AS "INSTANCE_ID", 'UNKNOWN' AS "SRC_ID" 
)
ON CONFLICT ("INSTANCE_ID","SRC_ID") DO UPDATE SET
 "ID"=EXCLUDED."ID", "DESCRIPTION"=EXCLUDED."DESCRIPTION", "INSTANCE_ID"=EXCLUDED."INSTANCE_ID",
 "SRC_ID"=EXCLUDED."SRC_ID";
INSERT INTO "DWH_ALF_DIM_ACTIONS" ("DESCRIPTION","INSTANCE_ID","SRC_ID")
(
 SELECT DISTINCT UPPER("ACTION") AS "DESCRIPTION", "INSTANCE_ID", UPPER("ACTION") AS "SRC_ID"
 FROM "OPE_ALF_AUDIT_ACCESSES"
 WHERE "INSTANCE_ID"=${instanceId} AND "ACTION" IS NOT NULL
 UNION ALL
 SELECT 'LOGIN' AS "DESCRIPTION", ${instanceId} AS "INSTANCE_ID", 'LOGIN' AS "SRC_ID"
 UNION ALL
 SELECT 'LOGINFAILURE' AS "DESCRIPTION", ${instanceId} AS "INSTANCE_ID", 'LOGINFAILURE' AS "SRC_ID"
 UNION ALL
 SELECT 'LOGOUT' AS "DESCRIPTION", ${instanceId} AS "INSTANCE_ID", 'LOGOUT' AS "SRC_ID"
)
ON CONFLICT ("INSTANCE_ID","SRC_ID") DO UPDATE SET
 "DESCRIPTION"=EXCLUDED."DESCRIPTION", "INSTANCE_ID"=EXCLUDED."INSTANCE_ID", "SRC_ID"=EXCLUDED."SRC_ID";
</query>
<query queryId="warehouseAuditsMinDt">
SELECT
 CONCAT(COALESCE(TO_CHAR(MIN("TIME"),'YYYY-MM-DD'),'2001-01-01'),'T00:00:00.000Z') AS "DT"
FROM
 "OPE_ALF_AUDIT_ACCESSES"
WHERE
 "INSTANCE_ID"=${instanceId};
</query>
<query queryId="warehouseAuditsMaxDt">
SELECT
 COALESCE(TO_CHAR(MAX("DATE_ID"),'YYYY-MM-DD'),'2001-01-01') AS "DT" 
FROM
 "DWH_ALF_FACT_ACCESSES"
WHERE
 "INSTANCE_ID"=${sourceId};
</query>
<query queryId="warehouseAuditsAccessMaxId">
SELECT COALESCE(MAX("SRC_ID"),0) AS "ID" FROM "DWH_ALF_FACT_ACCESSES" WHERE "INSTANCE_ID"=${instanceId}
</query>
<query queryId="warehouseAuditsCount">
SELECT COUNT(*) AS "COUNTER" FROM "DWH_ALF_FACT_ACCESSES" WHERE "INSTANCE_ID"=${sourceId}
</query>
<query queryId="warehouseCategoriesCount">
 SELECT SUM(T."COUNTER")+1 AS "COUNTER"
 FROM (
  SELECT COUNT(*)-1 AS "COUNTER" FROM "DWH_ALF_DIM_CATEGORIES" WHERE "INSTANCE_ID"=${sourceId}
  UNION ALL
  SELECT COUNT(*)-1 AS "COUNTER" FROM "DWH_ALF_DIM_TAGS" WHERE "INSTANCE_ID"=${sourceId}) T;
</query>
<query queryId="warehouseCategoriesDelete">
 DELETE FROM "DWH_ALF_DIM_CATEGORIES"
 WHERE
  "DWH_ALF_DIM_CATEGORIES"."INSTANCE_ID"=${instanceId}
  AND "DWH_ALF_DIM_CATEGORIES"."SRC_ID"!='UNKNOWN'
  AND NOT EXISTS (
   SELECT 1 
   FROM "OPE_ALF_CATEGORIES" 
   WHERE
    "OPE_ALF_CATEGORIES"."INSTANCE_ID"="DWH_ALF_DIM_CATEGORIES"."INSTANCE_ID" 
    AND "OPE_ALF_CATEGORIES"."NODE_UUID"="DWH_ALF_DIM_CATEGORIES"."SRC_ID" 
    AND "OPE_ALF_CATEGORIES"."PARENT_NODE_UUID"!='tag:tag-root');
</query>
<query queryId="warehouseCategoriesInsUpd">
INSERT INTO "DWH_ALF_DIM_CATEGORIES" ("ID","NAME","CREATED_AT","CREATED_BY","MODIFIED_AT","MODIFIED_BY","PARENT_ID","INSTANCE_ID","SRC_ID")
(
 SELECT
  -${instanceId} AS "ID", 'Unknown' AS "NAME", TO_DATE('2001-01-01','YYYY-MM-DD') AS "CREATED_AT", -${instanceId} AS "CREATED_BY", 
  TO_DATE('2001-01-01','YYYY-MM-DD') AS "MODIFIED_AT", -${instanceId} AS "MODIFIED_BY", -${instanceId} AS "PARENT_ID", 
  ${instanceId} AS "INSTANCE_ID", 'UNKNOWN' AS "SRC_ID" 
)
ON CONFLICT ("INSTANCE_ID","SRC_ID") DO UPDATE SET 
  "ID"=EXCLUDED."ID", "NAME"=EXCLUDED."NAME", 
  "CREATED_AT"=EXCLUDED."CREATED_AT", "CREATED_BY"=EXCLUDED."CREATED_BY", "MODIFIED_AT"=EXCLUDED."MODIFIED_AT", 
  "MODIFIED_BY"=EXCLUDED."MODIFIED_BY", "PARENT_ID"=EXCLUDED."PARENT_ID", "INSTANCE_ID"=EXCLUDED."INSTANCE_ID",
  "SRC_ID"=EXCLUDED."SRC_ID";
INSERT INTO "DWH_ALF_DIM_CATEGORIES" ("NAME","CREATED_AT","CREATED_BY","MODIFIED_AT","MODIFIED_BY","PARENT_ID","INSTANCE_ID","SRC_ID")
(
 SELECT 
  COALESCE("NAME",'Unknown') AS "NAME",COALESCE(DATE_TRUNC('day',"CREATED_AT"),TO_DATE('2001-01-01','YYYY-MM-DD')) AS "CREATED_AT",COALESCE(CREATOR."ID", -${instanceId}) AS "CREATED_BY",
  COALESCE(DATE_TRUNC('day',"MODIFIED_AT"),TO_DATE('2001-01-01','YYYY-MM-DD')) AS "MODIFIED_AT",COALESCE(MODIFIER."ID", -${instanceId}) AS "MODIFIED_BY",
  -${instanceId} AS "PARENT_NODE_UUID", ${instanceId} AS "INSTANCE_ID","NODE_UUID" AS "SRC_ID" 
 FROM
  "OPE_ALF_CATEGORIES" 
  LEFT JOIN "DWH_ALF_DIM_USERS" AS CREATOR ON "OPE_ALF_CATEGORIES"."INSTANCE_ID"=CREATOR."INSTANCE_ID" AND "OPE_ALF_CATEGORIES"."NODE_UUID"=CREATOR."SRC_ID" 
  LEFT JOIN "DWH_ALF_DIM_USERS" AS MODIFIER ON "OPE_ALF_CATEGORIES"."INSTANCE_ID"=MODIFIER."INSTANCE_ID" AND "OPE_ALF_CATEGORIES"."NODE_UUID"=MODIFIER."SRC_ID" 
 WHERE
  "NODE_UUID"!='tag:tag-root' 
  AND "OPE_ALF_CATEGORIES"."PARENT_NODE_UUID"!='tag:tag-root'
  AND "OPE_ALF_CATEGORIES"."INSTANCE_ID"=${instanceId}
)
ON CONFLICT ("INSTANCE_ID","SRC_ID") DO UPDATE SET 
 "NAME"=EXCLUDED."NAME", "CREATED_AT"=EXCLUDED."CREATED_AT",
 "CREATED_BY"=EXCLUDED."CREATED_BY", "MODIFIED_AT"=EXCLUDED."MODIFIED_AT", "MODIFIED_BY"=EXCLUDED."MODIFIED_BY", 
 "PARENT_ID"=EXCLUDED."PARENT_ID", "INSTANCE_ID"=EXCLUDED."INSTANCE_ID", "SRC_ID"=EXCLUDED."SRC_ID";
</query>
<query queryId="warehouseCategoriesUpdParent">
UPDATE "DWH_ALF_DIM_CATEGORIES" 
SET "PARENT_ID"=T."PARENT_ID"
FROM
(
 SELECT
  "DWH_ALF_DIM_CATEGORIES"."ID" AS "PARENT_ID", "OPE_ALF_CATEGORIES"."INSTANCE_ID", "OPE_ALF_CATEGORIES"."NODE_UUID" AS "SRC_ID" 
 FROM
  "OPE_ALF_CATEGORIES" 
  JOIN "DWH_ALF_DIM_CATEGORIES" ON "OPE_ALF_CATEGORIES"."INSTANCE_ID"="DWH_ALF_DIM_CATEGORIES"."INSTANCE_ID" AND "OPE_ALF_CATEGORIES"."PARENT_NODE_UUID"="DWH_ALF_DIM_CATEGORIES"."SRC_ID" 
 WHERE
  "OPE_ALF_CATEGORIES"."NODE_UUID"!='tag:tag-root' 
  AND "OPE_ALF_CATEGORIES"."PARENT_NODE_UUID"!='tag:tag-root'
  AND "OPE_ALF_CATEGORIES"."INSTANCE_ID"=${instanceId}
) T
WHERE
 "DWH_ALF_DIM_CATEGORIES"."INSTANCE_ID"=T."INSTANCE_ID"
 AND "DWH_ALF_DIM_CATEGORIES"."SRC_ID"=T."SRC_ID"
 AND "DWH_ALF_DIM_CATEGORIES"."INSTANCE_ID"=${instanceId};
</query>
<query queryId="warehouseContentsAndFoldersInsUpdUnknown">
INSERT INTO "DWH_ALF_DIM_FOLDERS" ("ID","NAME","NODE_TYPE_ID","CREATED_DT","CREATED_AT","CREATED_BY_ID","MODIFIED_DT","MODIFIED_AT","MODIFIED_BY_ID","OWNER_ID","PARENT_ID","INSTANCE_ID","SRC_ID")
(
 SELECT
  -${instanceId} AS "ID",'Unknown' AS "NAME",-${instanceId} AS "NODE_TYPE_ID", TO_DATE('2001-01-01','YYYY-MM-DD') AS "CREATED_DT",-1 AS "CREATED_AT",-${instanceId} AS "CREATED_BY_ID",
  TO_DATE('2001-01-01','YYYY-MM-DD') AS "MODIFIED_DT",-1 AS "MODIFIED_AT",-${instanceId} AS "MODIFIED_BY_ID",-${instanceId} AS "OWNER_ID",-${instanceId} AS "PARENT_ID",
  ${instanceId} AS "INSTANCE_ID", 'UNKNOWN' AS "SRC_ID" 
)
ON CONFLICT ("INSTANCE_ID","SRC_ID") DO UPDATE SET 
 "ID"=EXCLUDED."ID", "NAME"=EXCLUDED."NAME", "NODE_TYPE_ID"=EXCLUDED."NODE_TYPE_ID", "CREATED_DT"=EXCLUDED."CREATED_DT", "CREATED_AT"=EXCLUDED."CREATED_AT", 
 "CREATED_BY_ID"=EXCLUDED."CREATED_BY_ID", "MODIFIED_DT"=EXCLUDED."MODIFIED_DT", "MODIFIED_AT"=EXCLUDED."MODIFIED_AT", "MODIFIED_BY_ID"=EXCLUDED."MODIFIED_BY_ID", 
 "OWNER_ID"=EXCLUDED."OWNER_ID", "PARENT_ID"=EXCLUDED."PARENT_ID", "INSTANCE_ID"=EXCLUDED."INSTANCE_ID", "SRC_ID"=EXCLUDED."SRC_ID";
INSERT INTO "DWH_ALF_DIM_CONTENTS" ("ID","NAME","NODE_TYPE_ID","MIME_TYPE_ID","CREATED_DT","CREATED_AT","CREATED_BY_ID","MODIFIED_DT","MODIFIED_AT","MODIFIED_BY_ID","OWNER_ID","SIZE_IN_BYTES","PARENT_ID","INSTANCE_ID","SRC_ID")
(
 SELECT
  -${instanceId} AS "ID",'Unknown' AS "NAME",-${instanceId} AS "NODE_TYPE_ID",-${instanceId} AS "MIME_TYPE_ID",TO_DATE('2001-01-01','YYYY-MM-DD') AS "CREATED_DT",-1 AS "CREATED_AT",
  -${instanceId} AS "CREATED_BY_ID",TO_DATE('2001-01-01','YYYY-MM-DD') AS "MODIFIED_DT",-1 AS "MODIFIED_AT",-${instanceId} AS "MODIFIED_BY_ID",-${instanceId} AS "OWNER_ID",
  0 AS "SIZE_IN_BYTES",-${instanceId} AS "PARENT_ID",${instanceId} AS "INSTANCE_ID", 'UNKNOWN' AS "SRC_ID"
)
ON CONFLICT ("INSTANCE_ID","SRC_ID") DO UPDATE SET 
 "ID"=EXCLUDED."ID", "NAME"=EXCLUDED."NAME", "NODE_TYPE_ID"=EXCLUDED."NODE_TYPE_ID", "MIME_TYPE_ID"=EXCLUDED."MIME_TYPE_ID", "CREATED_DT"=EXCLUDED."CREATED_DT", "CREATED_AT"=EXCLUDED."CREATED_AT",
 "CREATED_BY_ID"=EXCLUDED."CREATED_BY_ID", "MODIFIED_DT"=EXCLUDED."MODIFIED_DT", "MODIFIED_AT"=EXCLUDED."MODIFIED_AT", "MODIFIED_BY_ID"=EXCLUDED."MODIFIED_BY_ID", "OWNER_ID"=EXCLUDED."OWNER_ID",
 "SIZE_IN_BYTES"=EXCLUDED."SIZE_IN_BYTES", "PARENT_ID"=EXCLUDED."PARENT_ID", "INSTANCE_ID"=EXCLUDED."INSTANCE_ID", "SRC_ID"=EXCLUDED."SRC_ID";
</query>
<query queryId="warehouseContentCategories">
DELETE FROM "DWH_ALF_DIM_CONTENT_CATEGORIES"
WHERE
 "DWH_ALF_DIM_CONTENT_CATEGORIES"."INSTANCE_ID"=${instanceId}
 AND EXISTS (
  SELECT 1
  FROM
   "OPE_ALF_CONTENTS"
   INNER JOIN "DWH_ALF_DIM_CONTENTS" ON "OPE_ALF_CONTENTS"."INSTANCE_ID"="DWH_ALF_DIM_CONTENTS"."INSTANCE_ID" AND "OPE_ALF_CONTENTS"."NODE_UUID"="DWH_ALF_DIM_CONTENTS"."SRC_ID"
  WHERE
   "OPE_ALF_CONTENTS"."NAME" IS NOT NULL
   AND "DWH_ALF_DIM_CONTENTS"."INSTANCE_ID"="DWH_ALF_DIM_CONTENT_CATEGORIES"."INSTANCE_ID"
   AND "DWH_ALF_DIM_CONTENTS"."ID"="DWH_ALF_DIM_CONTENT_CATEGORIES"."CONTENT_ID");
INSERT INTO "DWH_ALF_DIM_CONTENT_CATEGORIES"
("CONTENT_ID", "ORDINAL", "CATEGORY_ID", "INSTANCE_ID")
SELECT
 COALESCE("DWH_ALF_DIM_CONTENTS"."ID",-${instanceId}) AS "CONTENT_ID",
 "OPE_ALF_CONTENT_CATEGORIES"."ORDINAL" AS "ORDINAL",
 COALESCE("DWH_ALF_DIM_CATEGORIES"."ID",-${instanceId}) AS "CATEGORY_ID",
 "OPE_ALF_CONTENT_CATEGORIES"."INSTANCE_ID" AS "INSTANCE_ID"
FROM
 "OPE_ALF_CONTENT_CATEGORIES"
 INNER JOIN "DWH_ALF_DIM_CONTENTS" ON "OPE_ALF_CONTENT_CATEGORIES"."INSTANCE_ID"="DWH_ALF_DIM_CONTENTS"."INSTANCE_ID" AND "OPE_ALF_CONTENT_CATEGORIES"."NODE_UUID"="DWH_ALF_DIM_CONTENTS"."SRC_ID"
 INNER JOIN "DWH_ALF_DIM_CATEGORIES" ON "OPE_ALF_CONTENT_CATEGORIES"."INSTANCE_ID"="DWH_ALF_DIM_CATEGORIES"."INSTANCE_ID" AND "OPE_ALF_CONTENT_CATEGORIES"."CATEGORY_NODE_UUID"="DWH_ALF_DIM_CATEGORIES"."SRC_ID"
WHERE
 "OPE_ALF_CONTENT_CATEGORIES"."INSTANCE_ID"=${instanceId};
</query>
<query queryId="warehouseContentsDelete">
DELETE FROM "DWH_ALF_DIM_CONTENTS" 
WHERE
 "DWH_ALF_DIM_CONTENTS"."INSTANCE_ID"=${instanceId}
 AND "DWH_ALF_DIM_CONTENTS"."SRC_ID"!='UNKNOWN'
 AND NOT EXISTS (
  SELECT 1 
  FROM "OPE_ALF_CONTENTS" 
  WHERE
   "OPE_ALF_CONTENTS"."INSTANCE_ID"="DWH_ALF_DIM_CONTENTS"."INSTANCE_ID" 
   AND "OPE_ALF_CONTENTS"."NODE_UUID"="DWH_ALF_DIM_CONTENTS"."SRC_ID") 
</query>
<query queryId="warehouseContentsInsUpd">
INSERT INTO "DWH_ALF_DIM_CONTENTS" ("NAME", "NODE_TYPE_ID", "MIME_TYPE_ID", "CREATED_DT", "CREATED_AT", "CREATED_BY_ID", "MODIFIED_DT", "MODIFIED_AT", "MODIFIED_BY_ID", "OWNER_ID", "SIZE_IN_BYTES", "PARENT_ID", "INSTANCE_ID", "SRC_ID")
(
 SELECT
  C."NAME" AS "NAME",COALESCE(NT."ID",-${instanceId}) AS "NODE_TYPE_ID",COALESCE(MT."ID",-${instanceId}) AS "MIME_TYPE_ID",COALESCE(CAST(C."CREATED_AT" AS DATE),TO_DATE('2001-01-01','YYYY-MM-DD')) AS "CREATED_DT",
  COALESCE(EXTRACT(HOUR FROM C."CREATED_AT")*60 + EXTRACT(MINUTE FROM C."CREATED_AT"),-1) AS "CREATED_AT", COALESCE(CU."ID",-${instanceId}) AS "CREATED_BY_ID",
  COALESCE(CAST(C."MODIFIED_AT" AS DATE),TO_DATE('2001-01-01','YYYY-MM-DD')) AS "MODIFIED_DT", COALESCE(EXTRACT(HOUR FROM C."MODIFIED_AT")*60 + EXTRACT(MINUTE FROM C."MODIFIED_AT"),-1) AS "MODIFIED_AT",
  COALESCE(MU."ID",-${instanceId}) AS "MODIFIED_BY_ID",COALESCE(OU."ID",-${instanceId}) AS "OWNER_ID", COALESCE(C."SIZE_IN_BYTES",0) AS "SIZE_IN_BYTES", 
  -${instanceId} AS "PARENT_ID", ${instanceId} AS "INSTANCE_ID", C."NODE_UUID" AS "SRC_ID"
 FROM
  "OPE_ALF_CONTENTS" C 
  LEFT JOIN "DWH_ALF_DIM_NODE_TYPES" NT ON NT."INSTANCE_ID"=C."INSTANCE_ID" AND NT."SRC_ID"=C."NODE_TYPE" 
  LEFT JOIN "DWH_ALF_DIM_MIME_TYPES" MT ON MT."INSTANCE_ID"=C."INSTANCE_ID" AND MT."SRC_ID"=C."MIME_TYPE" 
  LEFT JOIN "DWH_ALF_DIM_USERS" CU ON CU."INSTANCE_ID"=C."INSTANCE_ID" AND CU."SRC_ID"=C."CREATED_BY" 
  LEFT JOIN "DWH_ALF_DIM_USERS" MU ON MU."INSTANCE_ID"=C."INSTANCE_ID" AND MU."SRC_ID"=C."MODIFIED_BY" 
  LEFT JOIN "DWH_ALF_DIM_USERS" OU ON OU."INSTANCE_ID"=C."INSTANCE_ID" AND OU."SRC_ID"=C."OWNER"
 WHERE 
  C."NAME" IS NOT NULL
  AND C."INSTANCE_ID"=${instanceId}
)
ON CONFLICT ("INSTANCE_ID","SRC_ID") DO UPDATE SET 
  "NAME"=EXCLUDED."NAME", "NODE_TYPE_ID"=EXCLUDED."NODE_TYPE_ID", "MIME_TYPE_ID"=EXCLUDED."MIME_TYPE_ID", 
  "CREATED_DT"=EXCLUDED."CREATED_DT", "CREATED_AT"=EXCLUDED."CREATED_AT", "CREATED_BY_ID"=EXCLUDED."CREATED_BY_ID",
  "MODIFIED_DT"=EXCLUDED."MODIFIED_DT", "MODIFIED_AT"=EXCLUDED."MODIFIED_AT", "MODIFIED_BY_ID"=EXCLUDED."MODIFIED_BY_ID",
  "OWNER_ID"=EXCLUDED."OWNER_ID", "SIZE_IN_BYTES"=EXCLUDED."SIZE_IN_BYTES", "PARENT_ID"=EXCLUDED."PARENT_ID",
  "INSTANCE_ID"=EXCLUDED."INSTANCE_ID", "SRC_ID"=EXCLUDED."SRC_ID";
UPDATE "DWH_ALF_DIM_CONTENTS"
SET "PARENT_ID"=T."PARENT_ID"
FROM (
 SELECT "DWH_ALF_DIM_FOLDERS"."ID" AS "PARENT_ID", "OPE_ALF_CONTENTS"."INSTANCE_ID", "OPE_ALF_CONTENTS"."NODE_UUID" AS "SRC_ID"
 FROM 
  "OPE_ALF_CONTENTS"
  JOIN "DWH_ALF_DIM_FOLDERS" ON "OPE_ALF_CONTENTS"."INSTANCE_ID"="DWH_ALF_DIM_FOLDERS"."INSTANCE_ID" AND "OPE_ALF_CONTENTS"."PARENT_NODE_UUID"="DWH_ALF_DIM_FOLDERS"."SRC_ID" 
 WHERE 
  "OPE_ALF_CONTENTS"."NAME" IS NOT NULL AND "OPE_ALF_CONTENTS"."INSTANCE_ID"=${instanceId}
) T
WHERE
 "DWH_ALF_DIM_CONTENTS"."INSTANCE_ID"=T."INSTANCE_ID"
 AND "DWH_ALF_DIM_CONTENTS"."SRC_ID"=T."SRC_ID";
</query>
<query queryId="warehouseContentTags">
DELETE FROM "DWH_ALF_DIM_CONTENT_TAGS"
WHERE
 "DWH_ALF_DIM_CONTENT_TAGS"."INSTANCE_ID"=${instanceId}
 AND EXISTS (
  SELECT 1
  FROM
   "OPE_ALF_CONTENTS"
   INNER JOIN "DWH_ALF_DIM_CONTENTS" ON "OPE_ALF_CONTENTS"."INSTANCE_ID"="DWH_ALF_DIM_CONTENTS"."INSTANCE_ID" AND "OPE_ALF_CONTENTS"."NODE_UUID"="DWH_ALF_DIM_CONTENTS"."SRC_ID"
  WHERE
   "OPE_ALF_CONTENTS"."NAME" IS NOT NULL
   AND "DWH_ALF_DIM_CONTENTS"."INSTANCE_ID"="DWH_ALF_DIM_CONTENT_TAGS"."INSTANCE_ID"
   AND "DWH_ALF_DIM_CONTENTS"."ID"="DWH_ALF_DIM_CONTENT_TAGS"."CONTENT_ID");
INSERT INTO "DWH_ALF_DIM_CONTENT_TAGS"
("CONTENT_ID", "ORDINAL", "TAG_ID", "INSTANCE_ID")
SELECT
 COALESCE("DWH_ALF_DIM_CONTENTS"."ID",-${instanceId}) AS "CONTENT_ID",
 "OPE_ALF_CONTENT_TAGS"."ORDINAL" AS "ORDINAL",
 COALESCE("DWH_ALF_DIM_TAGS"."ID",-${instanceId}) AS "TAG_ID",
 "OPE_ALF_CONTENT_TAGS"."INSTANCE_ID" AS "INSTANCE_ID"
FROM
 "OPE_ALF_CONTENT_TAGS"
 INNER JOIN "DWH_ALF_DIM_CONTENTS" ON "OPE_ALF_CONTENT_TAGS"."INSTANCE_ID"="DWH_ALF_DIM_CONTENTS"."INSTANCE_ID" AND "OPE_ALF_CONTENT_TAGS"."NODE_UUID"="DWH_ALF_DIM_CONTENTS"."SRC_ID"
 INNER JOIN "DWH_ALF_DIM_TAGS" ON "OPE_ALF_CONTENT_TAGS"."INSTANCE_ID"="DWH_ALF_DIM_TAGS"."INSTANCE_ID" AND "OPE_ALF_CONTENT_TAGS"."TAG_NODE_UUID"="DWH_ALF_DIM_TAGS"."SRC_ID"
WHERE
 "OPE_ALF_CONTENT_TAGS"."INSTANCE_ID"=${instanceId};
</query>
<query queryId="warehouseFolderCategories">
DELETE FROM "DWH_ALF_DIM_FOLDER_CATEGORIES"
WHERE
 "DWH_ALF_DIM_FOLDER_CATEGORIES"."INSTANCE_ID"=${instanceId}
 AND EXISTS (
  SELECT 1
  FROM
   "OPE_ALF_FOLDERS"
   INNER JOIN "DWH_ALF_DIM_FOLDERS" ON "OPE_ALF_FOLDERS"."INSTANCE_ID"="DWH_ALF_DIM_FOLDERS"."INSTANCE_ID" AND "OPE_ALF_FOLDERS"."NODE_UUID"="DWH_ALF_DIM_FOLDERS"."SRC_ID"
  WHERE
   "OPE_ALF_FOLDERS"."NAME" IS NOT NULL
   AND "DWH_ALF_DIM_FOLDERS"."INSTANCE_ID"="DWH_ALF_DIM_FOLDER_CATEGORIES"."INSTANCE_ID"
   AND "DWH_ALF_DIM_FOLDERS"."ID"="DWH_ALF_DIM_FOLDER_CATEGORIES"."FOLDER_ID");
INSERT INTO "DWH_ALF_DIM_FOLDER_CATEGORIES"
("FOLDER_ID", "ORDINAL", "CATEGORY_ID", "INSTANCE_ID")
SELECT
 COALESCE("DWH_ALF_DIM_FOLDERS"."ID",-${instanceId}) AS "FOLDER_ID",
 "OPE_ALF_FOLDER_CATEGORIES"."ORDINAL" AS "ORDINAL",
 COALESCE("DWH_ALF_DIM_CATEGORIES"."ID",-${instanceId}) AS "CATEGORY_ID",
 "OPE_ALF_FOLDER_CATEGORIES"."INSTANCE_ID" AS "INSTANCE_ID"
FROM
 "OPE_ALF_FOLDER_CATEGORIES"
 INNER JOIN "DWH_ALF_DIM_FOLDERS" ON "OPE_ALF_FOLDER_CATEGORIES"."INSTANCE_ID"="DWH_ALF_DIM_FOLDERS"."INSTANCE_ID" AND "OPE_ALF_FOLDER_CATEGORIES"."NODE_UUID"="DWH_ALF_DIM_FOLDERS"."SRC_ID"
 INNER JOIN "DWH_ALF_DIM_CATEGORIES" ON "OPE_ALF_FOLDER_CATEGORIES"."INSTANCE_ID"="DWH_ALF_DIM_CATEGORIES"."INSTANCE_ID" AND "OPE_ALF_FOLDER_CATEGORIES"."CATEGORY_NODE_UUID"="DWH_ALF_DIM_CATEGORIES"."SRC_ID"
WHERE
 "OPE_ALF_FOLDER_CATEGORIES"."INSTANCE_ID"=${instanceId};
</query>
<query queryId="warehouseFoldersDelete">
DELETE FROM "DWH_ALF_DIM_FOLDERS" 
WHERE
 "DWH_ALF_DIM_FOLDERS"."INSTANCE_ID"=${instanceId} 
 AND "DWH_ALF_DIM_FOLDERS"."SRC_ID"!='UNKNOWN'
 AND NOT EXISTS (
  SELECT 1 
  FROM "OPE_ALF_FOLDERS"
  WHERE 
   "OPE_ALF_FOLDERS"."INSTANCE_ID"="DWH_ALF_DIM_FOLDERS"."INSTANCE_ID" 
   AND "OPE_ALF_FOLDERS"."NODE_UUID"="DWH_ALF_DIM_FOLDERS"."SRC_ID") 
</query>
<query queryId="warehouseFoldersInsUpd">
INSERT INTO "DWH_ALF_DIM_FOLDERS" ("NAME","NODE_TYPE_ID","CREATED_DT","CREATED_AT","CREATED_BY_ID","MODIFIED_DT","MODIFIED_AT","MODIFIED_BY_ID","OWNER_ID","PARENT_ID","INSTANCE_ID","SRC_ID")
(
 SELECT
  F."NAME" AS "NAME",COALESCE(NT."ID",-${instanceId}) AS "NODE_TYPE_ID",COALESCE(CAST(F."CREATED_AT" AS DATE),TO_DATE('2001-01-01','YYYY-MM-DD')) AS "CREATED_DT",
  COALESCE(EXTRACT(HOUR FROM F."CREATED_AT")*60 + EXTRACT(MINUTE FROM F."CREATED_AT"),-1) AS "CREATED_AT",COALESCE(CU."ID",-${instanceId}) AS "CREATED_BY_ID",
  COALESCE(CAST(F."MODIFIED_AT" AS DATE),TO_DATE('2001-01-01','YYYY-MM-DD')) AS "MODIFIED_DT", COALESCE(EXTRACT(HOUR FROM F."MODIFIED_AT")*60 + EXTRACT(MINUTE FROM F."MODIFIED_AT"),-1) AS "MODIFIED_AT",
  COALESCE(MU."ID",-${instanceId}) AS "MODIFIED_BY_ID",COALESCE(OU."ID",-${instanceId}) AS "OWNER_ID", -${instanceId} AS "PARENT_ID", ${instanceId} AS "INSTANCE_ID", F."NODE_UUID" AS "SRC_ID"
 FROM
  "OPE_ALF_FOLDERS" F
  LEFT JOIN "DWH_ALF_DIM_NODE_TYPES" NT ON NT."INSTANCE_ID"=F."INSTANCE_ID" AND NT."SRC_ID"=F."NODE_TYPE"
  LEFT JOIN "DWH_ALF_DIM_USERS" CU ON CU."INSTANCE_ID"=F."INSTANCE_ID" AND CU."SRC_ID"=F."CREATED_BY"
  LEFT JOIN "DWH_ALF_DIM_USERS" MU ON MU."INSTANCE_ID"=F."INSTANCE_ID" AND MU."SRC_ID"=F."MODIFIED_BY"
  LEFT JOIN "DWH_ALF_DIM_USERS" OU ON OU."INSTANCE_ID"=F."INSTANCE_ID" AND OU."SRC_ID"=F."OWNER"
 WHERE
  F."NAME" IS NOT NULL
  AND F."INSTANCE_ID"=${instanceId}
)
ON CONFLICT ("INSTANCE_ID","SRC_ID") DO UPDATE SET
 "NAME"=EXCLUDED."NAME", "NODE_TYPE_ID"=EXCLUDED."NODE_TYPE_ID", "CREATED_DT"=EXCLUDED."CREATED_DT",
 "CREATED_AT"=EXCLUDED."CREATED_AT", "CREATED_BY_ID"=EXCLUDED."CREATED_BY_ID", "MODIFIED_DT"=EXCLUDED."MODIFIED_DT",
 "MODIFIED_AT"=EXCLUDED."MODIFIED_AT", "MODIFIED_BY_ID"=EXCLUDED."MODIFIED_BY_ID", "OWNER_ID"=EXCLUDED."OWNER_ID",
 "PARENT_ID"=EXCLUDED."PARENT_ID", "INSTANCE_ID"=EXCLUDED."INSTANCE_ID", "SRC_ID"=EXCLUDED."SRC_ID";
UPDATE "DWH_ALF_DIM_FOLDERS"
SET "PARENT_ID"=T."PARENT_ID"
FROM (
 SELECT "DWH_ALF_DIM_FOLDERS"."ID" AS "PARENT_ID", "OPE_ALF_FOLDERS"."INSTANCE_ID", "OPE_ALF_FOLDERS"."NODE_UUID" AS "SRC_ID"
 FROM 
  "OPE_ALF_FOLDERS"
  JOIN "DWH_ALF_DIM_FOLDERS" ON "OPE_ALF_FOLDERS"."INSTANCE_ID"="DWH_ALF_DIM_FOLDERS"."INSTANCE_ID" AND "OPE_ALF_FOLDERS"."PARENT_NODE_UUID"="DWH_ALF_DIM_FOLDERS"."SRC_ID" 
  WHERE "OPE_ALF_FOLDERS"."NAME" IS NOT NULL AND "OPE_ALF_FOLDERS"."INSTANCE_ID"=${instanceId}
) T
WHERE
 "DWH_ALF_DIM_FOLDERS"."INSTANCE_ID"=T."INSTANCE_ID"
 AND "DWH_ALF_DIM_FOLDERS"."SRC_ID"=T."SRC_ID";
</query>
<query queryId="warehouseFolderTags">
DELETE FROM "DWH_ALF_DIM_FOLDER_TAGS"
WHERE
 "DWH_ALF_DIM_FOLDER_TAGS"."INSTANCE_ID"=${instanceId}
 AND EXISTS (
  SELECT 1
  FROM
   "OPE_ALF_FOLDERS"
   INNER JOIN "DWH_ALF_DIM_FOLDERS" ON "OPE_ALF_FOLDERS"."INSTANCE_ID"="DWH_ALF_DIM_FOLDERS"."INSTANCE_ID" AND "OPE_ALF_FOLDERS"."NODE_UUID"="DWH_ALF_DIM_FOLDERS"."SRC_ID"
  WHERE
   "OPE_ALF_FOLDERS"."NAME" IS NOT NULL
   AND "DWH_ALF_DIM_FOLDERS"."INSTANCE_ID"="DWH_ALF_DIM_FOLDER_TAGS"."INSTANCE_ID"
   AND "DWH_ALF_DIM_FOLDERS"."ID"="DWH_ALF_DIM_FOLDER_TAGS"."FOLDER_ID");
INSERT INTO "DWH_ALF_DIM_FOLDER_TAGS"
("FOLDER_ID", "ORDINAL", "TAG_ID", "INSTANCE_ID")
SELECT
 COALESCE("DWH_ALF_DIM_FOLDERS"."ID",-${instanceId}) AS "FOLDER_ID",
 "OPE_ALF_FOLDER_TAGS"."ORDINAL" AS "ORDINAL",
 COALESCE("DWH_ALF_DIM_TAGS"."ID",-${instanceId}) AS "TAG_ID",
 "OPE_ALF_FOLDER_TAGS"."INSTANCE_ID" AS "INSTANCE_ID"
FROM
 "OPE_ALF_FOLDER_TAGS"
 INNER JOIN "DWH_ALF_DIM_FOLDERS" ON "OPE_ALF_FOLDER_TAGS"."INSTANCE_ID"="DWH_ALF_DIM_FOLDERS"."INSTANCE_ID" AND "OPE_ALF_FOLDER_TAGS"."NODE_UUID"="DWH_ALF_DIM_FOLDERS"."SRC_ID"
 INNER JOIN "DWH_ALF_DIM_TAGS" ON "OPE_ALF_FOLDER_TAGS"."INSTANCE_ID"="DWH_ALF_DIM_TAGS"."INSTANCE_ID" AND "OPE_ALF_FOLDER_TAGS"."TAG_NODE_UUID"="DWH_ALF_DIM_TAGS"."SRC_ID"
WHERE
 "OPE_ALF_FOLDER_TAGS"."INSTANCE_ID"=${instanceId};
</query>
<query queryId="warehouseProcessesMinDt">
SELECT CONCAT(COALESCE(TO_CHAR(MIN(T."DT"),'YYYY-MM-DD'),'2001-01-01'),'T00:00:00.000Z') AS "DT" FROM (
 SELECT MIN("DEPLOYED_AT") AS "DT" FROM "OPE_ALF_WF_DEPLOYMENTS" WHERE "INSTANCE_ID"=${instanceId}
 UNION ALL
 SELECT MIN("STARTED_AT") AS "DT" FROM "OPE_ALF_WF_INSTANCES" WHERE "INSTANCE_ID"=${instanceId}
 UNION ALL
 SELECT MIN("ENDED_AT") AS "DT" FROM "OPE_ALF_WF_INSTANCES" WHERE "INSTANCE_ID"=${instanceId}
 UNION ALL
 SELECT MIN("STARTED_AT") AS "DT" FROM "OPE_ALF_WF_TASKS" WHERE "INSTANCE_ID"=${instanceId}
 UNION ALL
 SELECT MIN("DUE_AT") AS "DT" FROM "OPE_ALF_WF_TASKS" WHERE "INSTANCE_ID"=${instanceId}) T
</query>
<query queryId="warehouseProcessesMaxDt">
SELECT COALESCE(TO_CHAR(MAX(T."DT") - INTERVAL '1 day','YYYY-MM-DD'),'2001-01-01') AS "DT" FROM (
 SELECT MAX("DEPLOYED_DT") AS "DT" FROM "DWH_ALF_DIM_WF_DEPLOYMENTS" WHERE "INSTANCE_ID"=${instanceId}
 UNION ALL
 SELECT MAX("STARTED_DT") AS "DT" FROM "DWH_ALF_DIM_WF_INSTANCES" WHERE "INSTANCE_ID"=${instanceId}
 UNION ALL
 SELECT MAX("ENDED_DT") AS "DT" FROM "DWH_ALF_DIM_WF_INSTANCES" WHERE "ENDED_DT" IS NOT NULL AND "INSTANCE_ID"=${instanceId}
 UNION ALL
 SELECT MAX("STARTED_DT") AS "DT" FROM "DWH_ALF_DIM_WF_TASKS" WHERE "INSTANCE_ID"=${instanceId}
 UNION ALL
 SELECT MAX("DUE_DT") AS "DT" FROM "DWH_ALF_DIM_WF_TASKS" WHERE "DUE_DT" IS NOT NULL AND "INSTANCE_ID"=${instanceId}) T
</query>
<query queryId="warehouseRepositoryCount">
 SELECT SUM(T."COUNTER") AS "COUNTER" 
 FROM (
  SELECT COUNT(*)-1 AS "COUNTER" FROM "DWH_ALF_DIM_CONTENTS" WHERE "INSTANCE_ID"=${sourceId} 
  UNION ALL 
  SELECT COUNT(*)-1 AS "COUNTER" FROM "DWH_ALF_DIM_FOLDERS" WHERE "INSTANCE_ID"=${sourceId}) T
</query>
<query queryId="warehouseRepositoryMinDt">
SELECT CONCAT(COALESCE(TO_CHAR(MIN(T."DT"),'YYYY-MM-DD'),'2001-01-01'),'T00:00:00.000Z') AS "DT" 
FROM (
 SELECT MIN("CREATED_AT") AS "DT" FROM "OPE_ALF_CONTENTS" WHERE "INSTANCE_ID"=${instanceId}
 UNION ALL
 SELECT MIN("CREATED_AT") AS "DT" FROM "OPE_ALF_FOLDERS" WHERE "INSTANCE_ID"=${instanceId}) AS T
</query>
<query queryId="warehouseRepositoryMaxDt">
SELECT CONCAT(COALESCE(TO_CHAR(MAX(T."DT"),'YYYY-MM-DD'),'2001-01-01'),'T00:00:00.000Z') AS "DT" 
FROM (
 SELECT MAX("MODIFIED_AT") AS "DT" FROM "OPE_ALF_CONTENTS" WHERE "INSTANCE_ID"=${instanceId}
 UNION ALL
 SELECT MAX("MODIFIED_AT") AS "DT" FROM "OPE_ALF_FOLDERS" WHERE "INSTANCE_ID"=${instanceId}) AS T
</query>
<query queryId="warehouseTagsCount">SELECT COUNT(*)-1 AS "COUNTER" FROM "DWH_ALF_DIM_TAGS" WHERE "INSTANCE_ID"=${sourceId}</query>
<query queryId="warehouseTagsDelete">
 SELECT * 
 FROM "DWH_ALF_DIM_TAGS"
 WHERE
  "DWH_ALF_DIM_TAGS"."INSTANCE_ID"=${instanceId} 
  AND "DWH_ALF_DIM_TAGS"."ID"&lt;>-${instanceId} 
  AND NOT EXISTS (
   SELECT 1 
   FROM "OPE_ALF_CATEGORIES" 
   WHERE 
    "OPE_ALF_CATEGORIES"."INSTANCE_ID"="DWH_ALF_DIM_TAGS"."INSTANCE_ID" 
    AND "OPE_ALF_CATEGORIES"."NODE_UUID"="DWH_ALF_DIM_TAGS"."SRC_ID" 
    AND "OPE_ALF_CATEGORIES"."PARENT_NODE_UUID"='tag:tag-root')
</query>
<query queryId="warehouseTagsInsUpd">
INSERT INTO "DWH_ALF_DIM_TAGS" ("ID","NAME","CREATED_AT","CREATED_BY","MODIFIED_AT","MODIFIED_BY","INSTANCE_ID","SRC_ID")
(
  SELECT 
   -${instanceId} AS "ID", 'Unknown' AS "NAME", TO_DATE('2001-01-01','YYYY-MM-DD') AS "CREATED_AT", -${instanceId} AS "CREATED_BY", TO_DATE('2001-01-01','YYYY-MM-DD') AS "MODIFIED_AT", 
   -${instanceId} AS "MODIFIED_BY", ${instanceId} AS "INSTANCE_ID", 'UNKNOWN' AS "SRC_ID" 
)
ON CONFLICT ("INSTANCE_ID","SRC_ID") DO UPDATE SET
 "ID"=EXCLUDED."ID", "NAME"=EXCLUDED."NAME", "CREATED_AT"=EXCLUDED."CREATED_AT", 
 "CREATED_BY"=EXCLUDED."CREATED_BY", "MODIFIED_AT"=EXCLUDED."MODIFIED_AT", "MODIFIED_BY"=EXCLUDED."MODIFIED_BY", 
 "INSTANCE_ID"=EXCLUDED."INSTANCE_ID", "SRC_ID"=EXCLUDED."SRC_ID";
INSERT INTO "DWH_ALF_DIM_TAGS" ("NAME","CREATED_AT","CREATED_BY","MODIFIED_AT","MODIFIED_BY","INSTANCE_ID","SRC_ID")
(
 SELECT COALESCE("NAME",'Unknown') AS "NAME",COALESCE(DATE_TRUNC('day',"CREATED_AT"),TO_DATE('2001-01-01','YYYY-MM-DD')) AS "CREATED_AT",COALESCE(CREATOR."ID", -${instanceId}) AS "CREATED_BY",COALESCE(DATE_TRUNC('day',"MODIFIED_AT"),TO_DATE('2001-01-01','YYYY-MM-DD')) AS "MODIFIED_AT",COALESCE(MODIFIER."ID", -${instanceId}) AS "MODIFIED_BY", ${instanceId} AS "INSTANCE_ID","NODE_UUID" AS "SRC_ID" 
 FROM 
  "OPE_ALF_CATEGORIES" 
  LEFT JOIN "DWH_ALF_DIM_USERS" AS CREATOR ON "OPE_ALF_CATEGORIES"."INSTANCE_ID"=CREATOR."INSTANCE_ID" AND "OPE_ALF_CATEGORIES"."NODE_UUID"=CREATOR."SRC_ID" 
  LEFT JOIN "DWH_ALF_DIM_USERS" AS MODIFIER ON "OPE_ALF_CATEGORIES"."INSTANCE_ID"=MODIFIER."INSTANCE_ID" AND "OPE_ALF_CATEGORIES"."NODE_UUID"=MODIFIER."SRC_ID" 
 WHERE "PARENT_NODE_UUID"='tag:tag-root' AND "OPE_ALF_CATEGORIES"."INSTANCE_ID"=${instanceId}
)
ON CONFLICT ("INSTANCE_ID","SRC_ID") DO UPDATE SET
 "NAME"=EXCLUDED."NAME", "CREATED_AT"=EXCLUDED."CREATED_AT", 
 "CREATED_BY"=EXCLUDED."CREATED_BY", "MODIFIED_AT"=EXCLUDED."MODIFIED_AT", "MODIFIED_BY"=EXCLUDED."MODIFIED_BY", 
 "INSTANCE_ID"=EXCLUDED."INSTANCE_ID", "SRC_ID"=EXCLUDED."SRC_ID";
</query>
<query queryId="warehouseNodeTypesInsUpd">
INSERT INTO "DWH_ALF_DIM_NODE_TYPES" ("ID","DESCRIPTION","INSTANCE_ID","SRC_ID")
(
 SELECT
  -${instanceId} AS "ID", 'Unknown' AS "DESCRIPTION", ${instanceId} AS "INSTANCE_ID", 'UNKNOWN' AS "SRC_ID"
)
ON CONFLICT ("INSTANCE_ID","SRC_ID") DO UPDATE SET
 "ID"=EXCLUDED."ID","DESCRIPTION"=EXCLUDED."DESCRIPTION","INSTANCE_ID"=EXCLUDED."INSTANCE_ID","SRC_ID"=EXCLUDED."SRC_ID";
INSERT INTO "DWH_ALF_DIM_NODE_TYPES" ("DESCRIPTION","INSTANCE_ID","SRC_ID")
(
 SELECT DISTINCT
  T."DESCRIPTION",T."INSTANCE_ID",T."SRC_ID" 
 FROM (
  SELECT DISTINCT "NODE_TYPE" AS "DESCRIPTION","INSTANCE_ID","NODE_TYPE" AS "SRC_ID" FROM "OPE_ALF_CONTENTS" WHERE "INSTANCE_ID"=${instanceId} 
  UNION ALL 
  SELECT DISTINCT "NODE_TYPE" AS "DESCRIPTION","INSTANCE_ID","NODE_TYPE" AS "SRC_ID" FROM "OPE_ALF_FOLDERS" WHERE "INSTANCE_ID"=${instanceId}) T
 WHERE
  "SRC_ID" IS NOT NULL
)
ON CONFLICT ("INSTANCE_ID","SRC_ID") DO UPDATE SET
 "DESCRIPTION"=EXCLUDED."DESCRIPTION","INSTANCE_ID"=EXCLUDED."INSTANCE_ID","SRC_ID"=EXCLUDED."SRC_ID";
</query>
<query queryId="warehouseMimeTypesInsUpd">
INSERT INTO "DWH_ALF_DIM_MIME_TYPES" ("ID","DESCRIPTION","INSTANCE_ID","SRC_ID")
(
 SELECT
  -${instanceId} AS "ID", 'Unknown' AS "DESCRIPTION", ${instanceId} AS "INSTANCE_ID", 'UNKNOWN' AS "SRC_ID"
)
ON CONFLICT ("INSTANCE_ID","SRC_ID") DO UPDATE SET
 "ID"=EXCLUDED."ID", "DESCRIPTION"=EXCLUDED."DESCRIPTION", "INSTANCE_ID"=EXCLUDED."INSTANCE_ID", "SRC_ID"=EXCLUDED."SRC_ID";
INSERT INTO "DWH_ALF_DIM_MIME_TYPES" ("DESCRIPTION","INSTANCE_ID","SRC_ID")
(
 SELECT DISTINCT
  "MIME_TYPE" AS "DESCRIPTION", "INSTANCE_ID", "MIME_TYPE" AS "SRC_ID" 
 FROM
  "OPE_ALF_CONTENTS"
 WHERE
  "INSTANCE_ID"=${instanceId} 
  AND "MIME_TYPE" IS NOT NULL
)
ON CONFLICT ("INSTANCE_ID","SRC_ID") DO UPDATE SET "DESCRIPTION"=EXCLUDED."DESCRIPTION", "INSTANCE_ID"=EXCLUDED."INSTANCE_ID", "SRC_ID"=EXCLUDED."SRC_ID";
</query>
<query queryId="warehouseProcessesCount">SELECT COUNT(*)-1 AS "COUNTER" FROM "DWH_ALF_DIM_WF_INSTANCES" WHERE "INSTANCE_ID"=${sourceId}</query>
<query queryId="warehouseTasksCount">SELECT COUNT(*)-1 AS "COUNTER" FROM "DWH_ALF_DIM_WF_TASKS" WHERE "INSTANCE_ID"=${sourceId}</query>
<query queryId="warehouseUsersCount">SELECT COUNT(*)-1 AS "COUNTER" FROM "DWH_ALF_DIM_USERS" WHERE "INSTANCE_ID"=${sourceId}</query>
<query queryId="warehouseUsersDelete">
UPDATE "DWH_ALF_DIM_USERS"
 SET
  "DT_DELETED"=CURRENT_DATE 
 WHERE
  "INSTANCE_ID"=${instanceId} AND 
  "DT_DELETED" IS NULL 
  AND "ALF_ID" NOT IN (SELECT "ALF_ID" FROM "OPE_ALF_USERS" WHERE "INSTANCE_ID"=${instanceId})
</query>
<query queryId="warehouseUsersInsUpd">
INSERT INTO "DWH_ALF_DIM_USERS" ("ID","ALF_ID","EMAIL","FIRST_NAME","LAST_NAME","ORGANIZATION","IS_EMAIL_NOTIFICATIONS_ENABLED","IS_ENABLED","DT_DELETED","INSTANCE_ID","SRC_ID") 
(
 SELECT
  -${instanceId} AS "ID", 'Unknown' AS "ALF_ID", 'Unknown' AS "EMAIL", 'Unknown' AS "FIRST_NAME", 'Unknown' AS "LAST_NAME",
  'Unknown' AS "ORGANIZATION", FALSE AS "IS_EMAIL_NOTIFICATIONS_ENABLED", TRUE AS "IS_ENABLED", NULL AS "DT_DELETED",
  ${instanceId} AS "INSTANCE_ID", 'Unknown' AS "SRC_ID"
) 
ON CONFLICT ("INSTANCE_ID","SRC_ID") DO UPDATE SET 
 "ID"=EXCLUDED."ID", "ALF_ID"=EXCLUDED."ALF_ID", "EMAIL"=EXCLUDED."EMAIL", "FIRST_NAME"=EXCLUDED."FIRST_NAME", "LAST_NAME"=EXCLUDED."LAST_NAME", 
 "ORGANIZATION"=EXCLUDED."ORGANIZATION", "IS_EMAIL_NOTIFICATIONS_ENABLED"=EXCLUDED."IS_EMAIL_NOTIFICATIONS_ENABLED", "IS_ENABLED"=EXCLUDED."IS_ENABLED", 
 "DT_DELETED"=EXCLUDED."DT_DELETED", "INSTANCE_ID"=EXCLUDED."INSTANCE_ID", "SRC_ID"=EXCLUDED."SRC_ID";
INSERT INTO "DWH_ALF_DIM_USERS" ("ALF_ID","EMAIL","FIRST_NAME","LAST_NAME","ORGANIZATION","IS_EMAIL_NOTIFICATIONS_ENABLED","IS_ENABLED","DT_DELETED","INSTANCE_ID","SRC_ID") 
(
 SELECT COALESCE("ID",'Unknown') AS "ALF_ID", COALESCE("EMAIL",'Unknown') AS "EMAIL", COALESCE("FIRST_NAME",'Unknown') AS "FIRST_NAME", COALESCE("LAST_NAME",'Unknown') AS "LAST_NAME",
 COALESCE("ORGANIZATION",'Unknown') AS "ORGANIZATION", COALESCE("IS_EMAIL_NOTIFICATIONS_ENABLED",FALSE) AS "IS_EMAIL_NOTIFICATIONS_ENABLED", COALESCE("IS_ENABLED",TRUE) AS "IS_ENABLED",
 NULL AS "DT_DELETED", "INSTANCE_ID", "ID" AS "SRC_ID" FROM "OPE_ALF_USERS" WHERE "INSTANCE_ID"=${instanceId}
) 
ON CONFLICT ("INSTANCE_ID","SRC_ID") DO UPDATE SET
 "ALF_ID"=EXCLUDED."ALF_ID", "EMAIL"=EXCLUDED."EMAIL", "FIRST_NAME"=EXCLUDED."FIRST_NAME", "LAST_NAME"=EXCLUDED."LAST_NAME", 
 "ORGANIZATION"=EXCLUDED."ORGANIZATION", "IS_EMAIL_NOTIFICATIONS_ENABLED"=EXCLUDED."IS_EMAIL_NOTIFICATIONS_ENABLED", "IS_ENABLED"=EXCLUDED."IS_ENABLED", 
 "DT_DELETED"=EXCLUDED."DT_DELETED", "INSTANCE_ID"=EXCLUDED."INSTANCE_ID", "SRC_ID"=EXCLUDED."SRC_ID";
</query>
<query queryId="warehouseWfDefinitionsInsUpd">
INSERT INTO "DWH_ALF_DIM_WF_DEFINITIONS" ("ID","NAME","DESCRIPTION","VERSION","KEY","DEPLOYMENT_ID","INSTANCE_ID","SRC_ID")
(
  SELECT
   -${instanceId} AS "ID", 'Unknown' AS "NAME", 'Unknown' AS "DESCRIPTION", 0 AS "VERSION", 'Unknown' AS "KEY", -${instanceId} AS "DEPLOYMENT_ID", ${instanceId} AS "INSTANCE_ID", 'Unknown' AS "SRC_ID"
)
ON CONFLICT ("INSTANCE_ID","SRC_ID") DO UPDATE SET 
 "ID"=EXCLUDED."ID", "NAME"=EXCLUDED."NAME", "DESCRIPTION"=EXCLUDED."DESCRIPTION",
 "VERSION"=EXCLUDED."VERSION", "KEY"=EXCLUDED."KEY",
 "DEPLOYMENT_ID"=EXCLUDED."DEPLOYMENT_ID", "INSTANCE_ID"=EXCLUDED."INSTANCE_ID", "SRC_ID"=EXCLUDED."SRC_ID";
INSERT INTO "DWH_ALF_DIM_WF_DEFINITIONS" ("NAME","DESCRIPTION","VERSION","KEY","DEPLOYMENT_ID","INSTANCE_ID","SRC_ID")
(
 SELECT
  DEF."NAME", DEF."DESCRIPTION", COALESCE(DEF."VERSION",1) AS "VERSION", COALESCE(DEF."KEY",'Unknown') AS "KEY", COALESCE(DEP."ID",-${instanceId}) AS "DEPLOYMENT_ID",
  ${instanceId} AS "INSTANCE_ID", DEF."ID" AS "SRC_ID" 
 FROM
  "OPE_ALF_WF_DEFINITIONS" DEF
  LEFT JOIN "DWH_ALF_DIM_WF_DEPLOYMENTS" DEP ON DEP."INSTANCE_ID"=DEF."INSTANCE_ID" AND DEP."SRC_ID"=DEF."DEPLOYMENT_ID"
 WHERE
  DEF."INSTANCE_ID"=${instanceId}
)
ON CONFLICT ("INSTANCE_ID","SRC_ID") DO UPDATE SET 
 "NAME"=EXCLUDED."NAME", "DESCRIPTION"=EXCLUDED."DESCRIPTION",
 "VERSION"=EXCLUDED."VERSION", "KEY"=EXCLUDED."KEY",
 "DEPLOYMENT_ID"=EXCLUDED."DEPLOYMENT_ID", "INSTANCE_ID"=EXCLUDED."INSTANCE_ID", "SRC_ID"=EXCLUDED."SRC_ID";
</query>
<query queryId="warehouseWfDeploymentsInsUpd">
INSERT INTO "DWH_ALF_DIM_WF_DEPLOYMENTS" ("ID","NAME","DEPLOYED_DT","INSTANCE_ID","SRC_ID")
(
  SELECT
   -${instanceId} AS "ID", 'Unknown' AS "NAME", TO_DATE('2001-01-01','YYYY-MM-DD') AS "DEPLOYED_DT", ${instanceId} AS "INSTANCE_ID", -${instanceId} AS "SRC_ID" 
)
ON CONFLICT ("INSTANCE_ID","SRC_ID") DO UPDATE SET
 "ID"=EXCLUDED."ID", "NAME"=EXCLUDED."NAME", "DEPLOYED_DT"=EXCLUDED."DEPLOYED_DT",
 "INSTANCE_ID"=EXCLUDED."INSTANCE_ID", "SRC_ID"=EXCLUDED."SRC_ID";
INSERT INTO "DWH_ALF_DIM_WF_DEPLOYMENTS" ("NAME","DEPLOYED_DT","INSTANCE_ID","SRC_ID")
(
 SELECT
  "NAME", TO_DATE('2001-01-01','YYYY-MM-DD') AS "DEPLOYED_DT", ${instanceId} AS "INSTANCE_ID", "ID" AS "SRC_ID" 
 FROM
  "OPE_ALF_WF_DEPLOYMENTS"
 WHERE
  "INSTANCE_ID"=${instanceId}
)
ON CONFLICT ("INSTANCE_ID","SRC_ID") DO UPDATE SET 
 "NAME"=EXCLUDED."NAME", "DEPLOYED_DT"=EXCLUDED."DEPLOYED_DT",
 "INSTANCE_ID"=EXCLUDED."INSTANCE_ID", "SRC_ID"=EXCLUDED."SRC_ID";
</query>
<query queryId="warehouseWfInstancesDelete">
DELETE FROM
 "DWH_ALF_DIM_WF_INSTANCES"
WHERE
 "INSTANCE_ID"=-${instanceId}
 AND "COMPLETED"=FALSE
 AND "SRC_ID"&lt;>-${instanceId}
 AND NOT EXISTS (
  SELECT 1
  FROM
   "OPE_ALF_WF_INSTANCES" 
  WHERE
   "DWH_ALF_DIM_WF_INSTANCES"."INSTANCE_ID"="OPE_ALF_WF_INSTANCES"."INSTANCE_ID"
   AND "DWH_ALF_DIM_WF_INSTANCES"."SRC_ID"="OPE_ALF_WF_INSTANCES"."ID");
</query>
<query queryId="warehouseWfInstancesInsUpd">
INSERT INTO "DWH_ALF_DIM_WF_INSTANCES" ("ID","COMPLETED","STARTED_DT","STARTED_AT","ENDED_DT","ENDED_AT","DEFINITION_ID","INSTANCE_ID","SRC_ID")
(
 SELECT
  -${instanceId} AS "ID", TRUE AS "COMPLETED", TO_DATE('2001-01-01','YYYY-MM-DD') AS "STARTED_DT", -1 AS "STARTED_AT", 
  TO_DATE('2001-01-01','YYYY-MM-DD') AS "ENDED_DT", -1 AS "ENDED_AT", -${instanceId} AS "DEFINITION_ID",
  ${instanceId} AS "INSTANCE_ID", -${instanceId} AS "SRC_ID"
)
ON CONFLICT ("INSTANCE_ID","SRC_ID") DO UPDATE SET 
 "ID"=EXCLUDED."ID", "COMPLETED"=EXCLUDED."COMPLETED", "STARTED_DT"=EXCLUDED."STARTED_DT",
 "STARTED_AT"=EXCLUDED."STARTED_AT", "ENDED_DT"=EXCLUDED."ENDED_DT",
 "ENDED_AT"=EXCLUDED."ENDED_AT", "DEFINITION_ID"=EXCLUDED."DEFINITION_ID",
 "INSTANCE_ID"=EXCLUDED."INSTANCE_ID", "SRC_ID"=EXCLUDED."SRC_ID";
INSERT INTO "DWH_ALF_DIM_WF_INSTANCES" ("COMPLETED","STARTED_DT","STARTED_AT","ENDED_DT","ENDED_AT","DEFINITION_ID","INSTANCE_ID","SRC_ID")
(
 SELECT
  I."COMPLETED", COALESCE(CAST(I."STARTED_AT" AS DATE),TO_DATE('2001-01-01','YYYY-MM-DD')) AS "STARTED_DT", 
  COALESCE(EXTRACT(HOUR FROM I."STARTED_AT")*60 + EXTRACT(MINUTE FROM I."STARTED_AT"),-1) AS "STARTED_AT", 
  COALESCE(CAST(I."ENDED_AT" AS DATE),TO_DATE('2001-01-01','YYYY-MM-DD')) AS "ENDED_DT",
  COALESCE(EXTRACT(HOUR FROM I."ENDED_AT")*60 + EXTRACT(MINUTE FROM I."ENDED_AT"),-1) AS "ENDED_AT", 
  COALESCE(D."ID",-${instanceId}) AS "DEFINITION_ID", ${instanceId} AS "INSTANCE_ID", I."ID" AS "SRC_ID" 
 FROM
  "OPE_ALF_WF_INSTANCES" I
  LEFT JOIN "DWH_ALF_DIM_WF_DEFINITIONS" D ON D."INSTANCE_ID"=I."INSTANCE_ID" AND D."SRC_ID"=I."DEFINITION_ID"
 WHERE
  I."INSTANCE_ID"=${instanceId}
)
ON CONFLICT ("INSTANCE_ID","SRC_ID") DO UPDATE SET 
 "COMPLETED"=EXCLUDED."COMPLETED", "STARTED_DT"=EXCLUDED."STARTED_DT",
 "STARTED_AT"=EXCLUDED."STARTED_AT", "ENDED_DT"=EXCLUDED."ENDED_DT",
 "ENDED_AT"=EXCLUDED."ENDED_AT", "DEFINITION_ID"=EXCLUDED."DEFINITION_ID",
 "INSTANCE_ID"=EXCLUDED."INSTANCE_ID", "SRC_ID"=EXCLUDED."SRC_ID";
</query>
<query queryId="warehouseWfItemsDelete">
DELETE FROM
 "DWH_ALF_DIM_WF_ITEMS"
WHERE
 "INSTANCE_ID"=${instanceId}
 AND "SRC_NODE_ID"!='Unknown'
 AND "SRC_WF_INSTANCE_ID"&lt;>-${instanceId}
 AND EXISTS (
   SELECT 1
   FROM "DWH_ALF_DIM_WF_INSTANCES"
   WHERE
    "DWH_ALF_DIM_WF_INSTANCES"."INSTANCE_ID"="DWH_ALF_DIM_WF_ITEMS"."INSTANCE_ID"
    AND "DWH_ALF_DIM_WF_INSTANCES"."ID"="DWH_ALF_DIM_WF_ITEMS"."WF_INSTANCE_ID"
    AND "DWH_ALF_DIM_WF_INSTANCES"."COMPLETED"=FALSE);
DELETE FROM
 "DWH_ALF_DIM_WF_ITEMS"
WHERE
 "INSTANCE_ID"=${instanceId}
 AND "SRC_NODE_ID"!='Unknown'
 AND "SRC_WF_INSTANCE_ID"&lt;>-${instanceId}
 AND EXISTS (
   SELECT 1
   FROM "OPE_ALF_WF_ITEMS"
   WHERE
    "OPE_ALF_WF_ITEMS"."WF_INSTANCE_ID"="DWH_ALF_DIM_WF_ITEMS"."WF_INSTANCE_ID");
</query>
<query queryId="warehouseWfItemsIns">
INSERT INTO "DWH_ALF_DIM_WF_ITEMS" ("CONTENT_ID","FOLDER_ID","WF_INSTANCE_ID","INSTANCE_ID","SRC_NODE_ID","SRC_WF_INSTANCE_ID")
(
 SELECT
  -${instanceId} AS "CONTENT_ID", -${instanceId} AS "FOLDER_ID", -${instanceId} AS "WF_INSTANCE_ID",
  ${instanceId} AS "INSTANCE_ID", 'Unknown' AS "SRC_NODE_ID", -${instanceId} AS "SRC_WF_INSTANCE_ID" 
) 
ON CONFLICT ("INSTANCE_ID","SRC_NODE_ID","SRC_WF_INSTANCE_ID") DO UPDATE SET
 "CONTENT_ID"=EXCLUDED."CONTENT_ID", "FOLDER_ID"=EXCLUDED."FOLDER_ID", "WF_INSTANCE_ID"=EXCLUDED."WF_INSTANCE_ID",
 "INSTANCE_ID"=EXCLUDED."INSTANCE_ID", "SRC_NODE_ID"=EXCLUDED."SRC_NODE_ID", "SRC_WF_INSTANCE_ID"=EXCLUDED."SRC_WF_INSTANCE_ID";
INSERT INTO "DWH_ALF_DIM_WF_ITEMS" ("CONTENT_ID","FOLDER_ID","WF_INSTANCE_ID","INSTANCE_ID","SRC_NODE_ID","SRC_WF_INSTANCE_ID")
(
 SELECT
  COALESCE(DC."ID",-${instanceId}) AS "CONTENT_ID",
  COALESCE(DF."ID",-${instanceId}) AS "FOLDER_ID",
  COALESCE(DI."ID",-${instanceId}) AS "WF_INSTANCE_ID",
  ${instanceId} AS "INSTANCE_ID",
  I."ID" AS "SRC_NODE_ID",
  I."WF_INSTANCE_ID" AS "SRC_WF_INSTANCE_ID"
 FROM
  "OPE_ALF_WF_ITEMS" I
  LEFT JOIN "DWH_ALF_DIM_WF_INSTANCES" DI ON DI."INSTANCE_ID"=I."INSTANCE_ID" AND DI."SRC_ID"=I."WF_INSTANCE_ID"
  LEFT JOIN "DWH_ALF_DIM_CONTENTS" DC ON DC."INSTANCE_ID"=I."INSTANCE_ID" AND DC."SRC_ID"=I."ID"
  LEFT JOIN "DWH_ALF_DIM_FOLDERS" DF ON DF."INSTANCE_ID"=I."INSTANCE_ID" AND DF."SRC_ID"=I."ID"
 WHERE
  I."INSTANCE_ID"=${instanceId}
)
ON CONFLICT ("INSTANCE_ID","SRC_NODE_ID","SRC_WF_INSTANCE_ID") DO UPDATE SET
 "CONTENT_ID"=EXCLUDED."CONTENT_ID", "FOLDER_ID"=EXCLUDED."FOLDER_ID", "WF_INSTANCE_ID"=EXCLUDED."WF_INSTANCE_ID",
 "INSTANCE_ID"=EXCLUDED."INSTANCE_ID", "SRC_NODE_ID"=EXCLUDED."SRC_NODE_ID", "SRC_WF_INSTANCE_ID"=EXCLUDED."SRC_WF_INSTANCE_ID";
</query>
<query queryId="warehouseWfTasksDelete">
DELETE FROM
 "DWH_ALF_DIM_WF_TASKS"
WHERE
 "INSTANCE_ID"=${instanceId}
 AND "SRC_ID"&lt;>-${instanceId}
 AND EXISTS (
   SELECT 1
   FROM "DWH_ALF_DIM_WF_INSTANCES"
   WHERE
    "DWH_ALF_DIM_WF_INSTANCES"."INSTANCE_ID"="DWH_ALF_DIM_WF_TASKS"."INSTANCE_ID"
    AND "DWH_ALF_DIM_WF_INSTANCES"."ID"="DWH_ALF_DIM_WF_TASKS"."WF_INSTANCE_ID"
    AND "DWH_ALF_DIM_WF_INSTANCES"."COMPLETED"=FALSE);
DELETE FROM
 "DWH_ALF_DIM_WF_TASKS"
WHERE
 "INSTANCE_ID"=${instanceId}
 AND "SRC_ID"&lt;>-${instanceId}
 AND EXISTS (
   SELECT 1
   FROM "OPE_ALF_WF_TASKS"
   WHERE
    "OPE_ALF_WF_TASKS"."WF_INSTANCE_ID"="DWH_ALF_DIM_WF_TASKS"."WF_INSTANCE_ID");
</query>
<query queryId="warehouseWfTasksIns">
INSERT INTO "DWH_ALF_DIM_WF_TASKS" ("ID","NAME","DESCRIPTION","STARTED_DT","STARTED_AT","DUE_DT","DUE_AT","ASSIGNEE","STATE","PRIORITY","TASK_DEFINITION_ID","WF_INSTANCE_ID","INSTANCE_ID","SRC_ID")
(
 SELECT
  -${instanceId} AS "ID", 'Unknown' AS "NAME", 'Unknown' AS "DESCRIPTION", TO_DATE('2001-01-01','YYYY-MM-DD') AS "STARTED_DT", -1 AS "STARTED_AT", 
  TO_DATE('2001-01-01','YYYY-MM-DD') AS "DUE_DT", -1 AS "DUE_AT", 'Unknown' AS "ASSIGNEE", 'Unknown' AS "STATE", -1 AS "PRIORITY", 'Unknown' AS "TASK_DEFINITION_ID", -${instanceId} AS "WF_INSTANCE_ID",
  ${instanceId} AS "INSTANCE_ID", -${instanceId} AS "SRC_ID" 
)
ON CONFLICT ("INSTANCE_ID","SRC_ID") DO UPDATE SET 
 "ID"=EXCLUDED."ID", "NAME"=EXCLUDED."NAME", "DESCRIPTION"=EXCLUDED."DESCRIPTION", "STARTED_DT"=EXCLUDED."STARTED_DT",
 "STARTED_AT"=EXCLUDED."STARTED_AT", "DUE_DT"=EXCLUDED."DUE_DT", "DUE_AT"=EXCLUDED."DUE_AT",
 "ASSIGNEE"=EXCLUDED."ASSIGNEE", "STATE"=EXCLUDED."STATE", "PRIORITY"=EXCLUDED."PRIORITY",
 "TASK_DEFINITION_ID"=EXCLUDED."TASK_DEFINITION_ID", "WF_INSTANCE_ID"=EXCLUDED."WF_INSTANCE_ID";
INSERT INTO "DWH_ALF_DIM_WF_TASKS" ("NAME","DESCRIPTION","STARTED_DT","STARTED_AT","DUE_DT","DUE_AT","ASSIGNEE","STATE","PRIORITY","TASK_DEFINITION_ID","WF_INSTANCE_ID","INSTANCE_ID","SRC_ID")
(
 SELECT
  T."NAME", T."DESCRIPTION",
  COALESCE(CAST(T."STARTED_AT" AS DATE),TO_DATE('2001-01-01','YYYY-MM-DD')) AS STARTED_DT, 
  COALESCE(EXTRACT(HOUR FROM T."STARTED_AT")*60 + EXTRACT(MINUTE FROM T."STARTED_AT"),-1) AS STARTED_AT, 
  COALESCE(CAST(T."DUE_AT" AS DATE),TO_DATE('2001-01-01','YYYY-MM-DD')) AS "DUE_DT",
  COALESCE(EXTRACT(HOUR FROM T."DUE_AT")*60 + EXTRACT(MINUTE FROM T."DUE_AT"),-1) AS "DUE_AT", 
  T."ASSIGNEE", T."STATE", T."PRIORITY", T."TASK_DEFINITION_ID",
  COALESCE(I."ID",-${instanceId}) AS "WF_INSTANCE_ID", ${instanceId} AS "INSTANCE_ID", T."ID" AS "SRC_ID" 
 FROM
  "OPE_ALF_WF_TASKS" T
  LEFT JOIN "DWH_ALF_DIM_WF_INSTANCES" I ON I."INSTANCE_ID"=T."INSTANCE_ID" AND I."SRC_ID"=T."WF_INSTANCE_ID"
 WHERE
  T."INSTANCE_ID"=${instanceId}
)
ON CONFLICT ("INSTANCE_ID","SRC_ID") DO UPDATE SET 
 "NAME"=EXCLUDED."NAME", "DESCRIPTION"=EXCLUDED."DESCRIPTION", "STARTED_DT"=EXCLUDED."STARTED_DT",
 "STARTED_AT"=EXCLUDED."STARTED_AT", "DUE_DT"=EXCLUDED."DUE_DT", "DUE_AT"=EXCLUDED."DUE_AT",
 "ASSIGNEE"=EXCLUDED."ASSIGNEE", "STATE"=EXCLUDED."STATE", "PRIORITY"=EXCLUDED."PRIORITY",
 "TASK_DEFINITION_ID"=EXCLUDED."TASK_DEFINITION_ID", "WF_INSTANCE_ID"=EXCLUDED."WF_INSTANCE_ID",
 "INSTANCE_ID"=EXCLUDED."INSTANCE_ID", "SRC_ID"=EXCLUDED."SRC_ID";
</query>
</queries>
